name: Run Android Instrumentation Tests on Linux

on:
  pull_request_target:
    types: [labeled, synchronize]

jobs:
  test:
    if: contains(github.event.pull_request.labels.*.name, 'ready-for-test')
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
    strategy:
      matrix:
        api-level: [31]

    steps:
      - name: checkout
        uses: actions/checkout@v4
        with:
          repository: ${{ github.event.pull_request.head.repo.full_name }}
          ref: ${{ github.event.pull_request.head.ref }}

      - name: Setup docker and start mock server
        run: |
          python3 coreruntime/tests/utils/download_from_s3.py --default_bucket deliteai --prefix build-dependencies/llama-3.2-1B/onnx --output mockserver/mockserver_assets/llama-3 --archive_output True
          cd mockserver
          docker compose up --build -d

      - name: Enable KVM
        run: |
          echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
          sudo udevadm control --reload-rules
          sudo udevadm trigger --name-match=kvm

      - name: Gradle cache
        uses: gradle/actions/setup-gradle@v4
        with:
          cache-read-only: false

      - name: AVD cache
        uses: actions/cache@v4
        id: avd-cache
        with:
          path: |
            ~/.android/avd/*
            ~/.android/adb*
          key: avd-${{ matrix.api-level }}

      - name: Create AVD and generate snapshot for caching
        if: steps.avd-cache.outputs.cache-hit != 'true'
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ matrix.api-level }}
          target: google_apis
          arch: x86_64
          force-avd-creation: false
          emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          disable-animations: false
          cores: 4
          script: echo "Generated AVD snapshot for caching."

      - name: Download external dependencies
        run: ./setup.sh --sdk android

      - name: Configure Android test secrets
        env:
          ANDROID_TEST_CLIENT_ID: ${{ secrets.ANDROID_TEST_CLIENT_ID }}
          ANDROID_TEST_CLIENT_SECRET: ${{ secrets.ANDROID_TEST_CLIENT_SECRET }}
          ANDROID_TEST_HOST: ${{ secrets.ANDROID_TEST_HOST }}
        run: |
          echo '#nimbleNetConfig:androidTest' > sdks/android/local.properties
          echo "ANDROID_TEST_CLIENT_ID=$ANDROID_TEST_CLIENT_ID" >> sdks/android/local.properties
          echo "ANDROID_TEST_CLIENT_SECRET=$ANDROID_TEST_CLIENT_SECRET" >> sdks/android/local.properties
          echo "ANDROID_TEST_HOST=$ANDROID_TEST_HOST" >> sdks/android/local.properties

      - name: Run tests
        timeout-minutes: 60
        uses: reactivecircus/android-emulator-runner@v2
        with:
          working-directory: ./sdks/android
          api-level: ${{ matrix.api-level }}
          target: google_apis
          arch: x86_64
          force-avd-creation: false
          emulator-options: -no-snapshot-save -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          disable-animations: true
          cores: 4
          script: |
            # Fail fast on any command error and ensure cleanup of crashpad_handler.
            set -e
            trap "killall -INT crashpad_handler || true" EXIT

            ./gradlew clean assembleExternalDebug
            ./gradlew :app:connectedExternalDebugAndroidTest -Pandroid.testInstrumentationRunnerArguments.class=dev.deliteai.android.sampleapp.e2e.E2ENetworkingAndroidTest#assetDownloadShouldWorkInIdealNetworkConditions
            ./gradlew :app:connectedExternalDebugAndroidTest -Pandroid.testInstrumentationRunnerArguments.class=dev.deliteai.android.sampleapp.e2e.E2ENetworkingAndroidTest#assetDownloadShouldWorkAfterInitialServerFailure
            ./gradlew :app:connectedExternalDebugAndroidTest -Pandroid.testInstrumentationRunnerArguments.class=dev.deliteai.android.sampleapp.e2e.E2ENetworkingAndroidTest#assetDownloadShouldNeverWorkAfterThreeServerFailure
            ./gradlew :app:connectedExternalDebugAndroidTest -Pandroid.testInstrumentationRunnerArguments.class=dev.deliteai.android.sampleapp.e2e.E2ENetworkingAndroidTest#onServerFailuresAssetDownloadShouldExactlyTryThreeTimes
            ./gradlew :app:connectedExternalDebugAndroidTest -Pandroid.testInstrumentationRunnerArguments.class=dev.deliteai.android.sampleapp.e2e.E2ENetworkingAndroidTest#onSuccessCodeSDKShouldNotMakeExtraNetworkCalls
            ./gradlew :nimblenet_ktx:connectedExternalDebugAndroidTest
            ./gradlew :app:connectedExternalDebugAndroidTest -Pandroid.testInstrumentationRunnerArguments.class=dev.deliteai.android.sampleapp.proto.ProtoTest
            ./gradlew :app:connectedExternalDebugAndroidTest -Pandroid.testInstrumentationRunnerArguments.class=dev.deliteai.android.sampleapp.proto.ProtoAddEventTest

      - name: Upload Test Reports (Failure Only)
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: android-test-report
          path: "**/build/reports/androidTests/connected/**"
